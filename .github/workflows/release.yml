hazem19952025 : Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: "Default release type if commit messages lack explicit #major/#minor/#patch"
        required: true
        default: patch
      prerelease_id:
        description: "Optional prerelease identifier (e.g. beta, rc)"
        required: false

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  semver-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version
        id: semver
        uses: MCKanpolat/auto-semver-action@v2
        with:
          releaseType: ${{ github.event.inputs.release_type || 'patch' }}
          identifier: ${{ github.event.inputs.prerelease_id }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show calculated version
        run: |
          echo "Next version: ${{ steps.semver.outputs.version }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Version bump, install deps & build action bundle
        run: |
          set -euo pipefail
          version=${{ steps.semver.outputs.version }}
          echo "Applying version v$version"
          # Update package.json version
          node -e "const fs=require('fs');const p=require('./package.json');p.version='"$version"';fs.writeFileSync('package.json',JSON.stringify(p,null,2)+'\n');"
          # Install & build (prepare script also builds, but we call explicitly for clarity)
          npm ci
          npm run build
          # Add generated artifacts
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json dist/
          if git diff --cached --quiet; then
            echo "No changes to commit (version already current & dist up-to-date)"
          else
            git commit -m "chore: release v$version (version + dist) [skip ci]"
            git push origin HEAD:main
          fi

      - name: Create & push tag
        run: |
          version=${{ steps.semver.outputs.version }}
          git fetch --tags --quiet
          if git rev-parse "v$version" >/dev/null 2>&1; then
            echo "Tag v$version already exists. Skipping."
          else
            git tag -a "v$version" -m "Release v$version"
            git push origin "v$version"
          fi

      - name: Update major tag alias (v1, V1)
        run: |
          version=${{ steps.semver.outputs.version }}
            major=${version%%.*}
            git tag -f v$major
            git push -f origin v$major
            # Uppercase legacy variant if desired
            git tag -f V$major || true
            git push -f origin V$major || true

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.semver.outputs.version }}
          name: v${{ steps.semver.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Marketplace metadata note
        run: echo "GitHub Marketplace listing updates automatically from the tag."
